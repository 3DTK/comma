#!/bin/bash

# This file is part of comma, a generic and flexible library
# Copyright (c) 2011 The University of Sydney
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University of Sydney nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# this script is designed to be included in another script directly, for example:
# source $( type -p comma-string-util )

[[ -n "$comma_string_util_include_guard_" ]] && return 0
readonly comma_string_util_include_guard_=1

# Trim leading and trailing whitespaces
# Usage:
#    var=$( comma_trim "$var" )
function comma_trim()
{
    (
        shopt -s extglob ; a=$1 ; b=${a%%*( )} ; b=${b##*( )} ; echo "$b"
    )
}
export -f comma_trim

# return a string with "\" before any characters that are special in regular expressions
function comma_escape_special_chars()
{
    echo $* | sed 's/[].*|&^$[]/\\&/g'
}
export -f comma_escape_special_chars

# Expand number ranges in comma-separated list of numbers
# e.g. 1-3 -> 1,2,3
#      3-1 -> 3,2,1
#      1-3,5,9-7 -> 1,2,3,5,9,8,7
function comma_expand_ranges()
{
    local line
    while read line; do
        # We convert 1-3 to 1,2,3; 3-1 to 3,2,1; and pass other values through
        tr , '\n' <<< $line \
            | sed -nr 'h                                        # save pattern
                       s/([0-9]+)-([0-9]+)/seq -s, \1 1 \2/e    # handle 1-3 case
                       t rev;p;b                                # handle and print single digit case
                       : rev;/./p                               # print 1-3 case
                       g                                        # restore original pattern
                       s/([0-9]+)-([0-9]+)/seq -s, \1 -1 \2/e   # handle 3-1 case
                       /./p                                     # print 3-1 case '\
            | paste -s -d,
    done
}
export -f comma_expand_ranges
