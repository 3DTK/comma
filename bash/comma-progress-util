#!/bin/bash

# This file is part of comma, a generic and flexible library
# Copyright (c) 2011 The University of Sydney
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University of Sydney nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# this script provides utilities for logging run-time of executed commands

# this script is designed to be included in another script directly, for example:
# source $( which comma-progress-util )

[[ -n "$comma_progress_util_include_guard_" ]] && return
readonly comma_progress_util_include_guard_=1

# a coarse elapsed time estimate of <command> execution appended to <file>
# the rationale of writing to a file is to have no side effects for <command>
# usage: comma_elapsed <file> <command> <args>
function comma_elapsed()
{
    local output_file=$1
    local name=$( basename $2 )
    local start=$( date +%s.%N )
    ${@:2}
    local end=$( date +%s.%N )
    local elapsed=$( echo "$end - $start" | bc )
    echo "$name/seconds=$elapsed" >> $output_file
}
export -f comma_elapsed

# append to <file> a coarse progress indication for <command> execution
# the rationale of writing to a file is to have no side effects for <command>
# usage: comma_progress_named <file> <name> <command> <args>
#        where <name> is an arbitrary name of user's choice that will be put in the log
function comma_progress_named()
{
    local -r comma_progress_output_file_=$1
    local -r comma_progress_name_=$2
    local -r cmd=$3
    local args=("${@:4}")

    # Remove empty args
    for i in ${!args[@]}; do
        [[ ${args[$i]} = '' ]] && unset args[$i]
    done

    echo "$( date +%Y%m%dT%H%M%S.%N | cut -b1-22 ),$comma_progress_name_,begin" >> $comma_progress_output_file_
    $cmd "${args[@]}"
    local -r exit_code=$?
    echo "$( date +%Y%m%dT%H%M%S.%N | cut -b1-22 ),$comma_progress_name_,end" >> $comma_progress_output_file_
    return $exit_code
}
export -f comma_progress_named

# append to <file> a coarse progress indication for <command> execution
# the rationale of writing to a file is to have no side effects for <command>
# usage: comma_progress <file> <command> <args>
function comma_progress()
{
    comma_progress_named $1 $( basename $2 ) "${@:2}"
#     local output_file=$1
#     local name=$( basename $2 )
#     echo "$( date +%Y%m%dT%H%M%S.%N | cut -b1-22 ),$name,begin" >> $output_file
#     ${@:2}
#     exit_code=$?
#     echo "$( date +%Y%m%dT%H%M%S.%N | cut -b1-22 ),$name,end" >> $output_file
#     return $exit_code
}
export -f comma_progress
