#!/bin/bash

date '+%F %T' | csv-time --from sql --to seconds | sed 's@^@time/start = @'

# setup tracing

# this function does not cause hangups
function debug_trap () { echo "# $SECONDS attributes/sql/test $1 '$2'" >&2 ; }

trap 'debug_trap $LINENO "$BASH_COMMAND"' DEBUG

# background sleep creates problems
sleep 1000 </dev/null >/dev/null 2>/dev/null & afps_ws_pid=$!

# just to give user time to view stderr.log
sleep 5

# will hang here (need a pipeline, only cat is not enough)
cat data/1.tmp | wc -l | sed 's@^@lines=@'

# will not see this line in tail -f stderr.log
echo "script finished" >&2

# cleanup
[[ -n $afps_ws_pid ]] && {
    kill -s TERM $afps_ws_pid
    wait $afps_ws_pid
    unset afps_ws_pid
}

date '+%F %T' | csv-time --from sql --to seconds | sed 's@^@time/end = @'

# final output (will not appear in killed tests)
echo "end = 1"
