#!/bin/bash

scriptname="comma_application_path_mangle_test"

source $( which comma-application-util ) || { printf "%s could not source comma-application-util" $scriptname >&2 ; exit 1 ; } 

mkdir -p output

if [[ '--actual-sed' == "$1" ]] ; then
    the_input="$( cat )"
    the_output=''
    for i in 1 2 3 4 5 6 7 8 9 10 ; do
        the_output+="$( comma_path_mangle_sed <<< "$the_input" || return 1 )" || exit 1
    done
    cat <<< "$the_output" > output/results-sed
    declare line line2
    declare -i count=0 success=0 failed=0 empty=0
    while read -r line ; do
        (( ++count ))
        if (( ${#line} == 0 )) ; then
            (( ++empty ))
        elif eval "$line" 2>/dev/null ; then
            (( ++success ))
        else
            line2="$( sed -e 's/%/%25/g' -e 's/"/%22/g' -e 's/'\''/%27/g' <<< "$line" )"
            echo "sed/line[$count]/eval=0"
            echo "sed/line[$count]/broken_text='$line2'"
            (( ++failed ))
        fi
    done <<< "$the_output"
    echo "sed/success_count=$success"
    echo "sed/failed_count=$failed"
    echo "sed/empty_count=$empty"
    exit 0
fi

first_input="$( cat )"
echo lines=$( wc -l <<< "$first_input" )

TIMEFORMAT='sed/time/real=%R'
export TIMEFORMAT
time $0 --actual-sed <<< "$first_input" && echo 'sed/status=1' || echo 'sed/status=0'
