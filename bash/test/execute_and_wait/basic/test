#!/bin/bash

source $( which comma-process-util ) || exit 1

function grab()
{
    sed --regexp-extended -n 's@.*(normal exit).*@\1@p'
}
export -f grab

export output_dir="output"
rm -rf "$output_dir" || exit 1
mkdir -p "$output_dir" || exit 1

# run a verbose utility to completion; check that all went smoothly
# and the test program indeed was executed
function test01()
{
    comma_execute_and_wait "comma-nap 10" > "$output_dir/test01.log"
}
test01 ; echo "test[1]/exit/status=$?" ; echo "test[1]/output=\""$( tail -n 1 "$output_dir"/test01.log | grab )"\""

# run a long program and terminate by timeout; verify that the command-to-execute
# was terminated (did not produce output), and that that expected status was returned
function test02()
{
    comma_execute_and_wait --max-wait=5 "comma-nap 10" > "$output_dir/test02.log"
}
test02 ; echo "test[2]/exit/status=$?" ; echo "test[2]/output=\""$( tail -n 1 "$output_dir"/test02.log )"\""

# check that can parse arguments to '--signals' (only parsed, not used)
function test03()
{
    comma_execute_and_wait --signals="TERM,USR1" "comma-nap 10" > "$output_dir/test03.log"
}
test03 ; echo "test[3]/exit/status=$?" ; echo "test[3]/output=\""$( tail -n 1 "$output_dir"/test03.log | grab )"\""

# check that can run a bash function to completion and pass arguments through
# the environment
function function_to_execute()
{
    { comma-nap $nap_time && echo "OK" ; } > $output_file
}
export -f function_to_execute

function test04()
{
    export output_file="$output_dir/test04.log"
    export nap_time=5
    comma_execute_and_wait "bash -c function_to_execute" >/dev/null
}
test04 ; echo "test[4]/exit/status=$?" ; echo "test[4]/output=\""$( tail -n 1 "$output_dir"/test04.log )"\""

# run a long bash function and terminate early; check the exit status and lack of output
function test05()
{
    export output_file="$output_dir/test05.log"
    export nap_time=10
    comma_execute_and_wait --timeout=5 "bash -c function_to_execute" >/dev/null
}
test05 ; echo "test[5]/exit/status=$?" ; echo "test[5]/output=\""$( tail -n 1 "$output_dir"/test05.log )"\""
