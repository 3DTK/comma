#!/bin/bash

. /usr/local/bin/aero-test-util

function usage()
{
    echo >&2
    echo "match input with expected values" >&2
    echo >&2
    echo "usage: cat some-test-output | aero-test-match <expected> [<options>]" >&2
    echo >&2
    echo "<expected>: file with expected outputs" >&2
    echo >&2
    exit 1
}

for arg in $@ ; do
    if [[ "$arg" == "--help" || "$arg" == "-h" ]] ; then usage ; fi
done

function read_path_value()
{
    map_name=$1
    while IFS='=' read path value ; do
    if [[ ! "$path" =~ ^[\ \t]*# ]] ; then
        path=$( echo $path | sed 's/^[ \t]*//g' )
        if [[ "$path" != "" ]] ; then eval ${map_name}["$path"]="$value" ; fi
    fi
    done < <( cat $2 )
}

declare -A expected
read_path_value expected $1
declare -A actual
read_path_value actual

result=0
for e in ${!expected[@]} ; do
    if [[ ! "${actual[$e]}" =~ expected["$e"] ]] ; then
        result=1
        echo -e "${red}aero-test-match: on $e:${none}" >&2
        echo -e "${red}    expected: ${expected[$e]}${none}" >&2
        if [[ "${actual[$e]}" == "" ]] ; then echo -e "${red}         got: nothing${none}" >&2
        else echo -e "${red}         got: ${actual[$e]}${none}" >&2 ; fi
    fi
done

exit $result

