#!/bin/bash

function generate_binary_file()
{
    local max=$1
    local t
    for i in $( seq 0 $(( max - 1 )) ) ; do
        t=$( date +%Y%m%dT%H%M%S.%N )
        echo "$i,$t,your-data-could-be-here-${n}"
        sleep 0.22
    done \
        | csv-paste --size=5 line-number - \
        | csv-paste --size=2 - line-number \
        | csv-to-bin "ui,ui,t,s[100],ui"
}

output_dir="output"
mkdir -p "$output_dir" || exit 1

binfile="$output_dir/file.bin"

generate_binary_file 10 > "$binfile"

function compare()
{
    local cmd="$1"
    local subdir="$2"
    mkdir -p "$output_dir/$subdir"
    csv-bin-cat "$binfile" $cmd > "$output_dir/$subdir/new.bin"
    cat "$binfile" | csv-shuffle $cmd > "$output_dir/$subdir/old.bin"
    cmp "$output_dir/$subdir/new.bin" "$output_dir/$subdir/old.bin" > "$output_dir/$subdir/cmp.log"
}

cmd="--binary=ui,ui,t,s[100],ui --fields=block,counter,t,string,num --output-fields=block"
compare "$cmd" "1"
echo "one/field/first/cmp/status=$?"

cmd="--binary=ui,ui,t,s[100],ui --fields=block,counter,t,string,num --output-fields=t"
compare "$cmd" "2"
echo "one/field/third/cmp/status=$?"

cmd="--binary=ui,ui,t,s[100],ui --fields=block,counter,t,string,num --output-fields=num"
compare "$cmd" "3"
echo "one/field/last/cmp/status=$?"

cmd="--binary=ui,ui,t,s[100],ui --fields=block,counter,t,string --output-fields=block,t"
compare "$cmd" "4"
echo "two/fields/expanded/cmp/status=$?"

cmd="--binary=2ui,t,s[100],ui --fields=block,counter,t,string --output-fields=block,t"
compare "$cmd" "5"
echo "two/fields/collapsed/cmp/status=$?"
