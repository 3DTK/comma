#!/bin/bash

name=$0

function bye()
{
    trap '' SIGTERM SIGINT
    if [[ -n "$stdout" ]]; then rm -f $stdout; fi
    if [[ -n "$stderr" ]]; then rm -f $stderr; fi
    exit $1
}

unset stdout stderr
trap 'bye 1' SIGTERM SIGINT

if [[ $name = */* ]]; then dir="${name%/*}"; else dir="."; fi
data_dir="$dir/data/name_value_eval_data"

if [[ ! -d "$data_dir" ]]; then
    echo "$name: cannot find data directory $data_dir" >&2
    exit 1
fi

tmpdir="/tmp"
verbose=0

while [[ $# -gt 0 ]]; do
    case "$1" in
        --tmpdir=*)   tmpdir="${1#*=}";;
        -v|--verbose) verbose=1;;
        -*)           echo "$name: unrecognized option '$1'" >&2; exit 1;;
        *)            echo "$name: unexpected argument '$1'" >&2; exit 1;;
    esac
    shift
done

variables="$data_dir/variable_vals"
stdout="$tmpdir/name_value_eval_stdout_$$.tmp"
stderr="$tmpdir/name_value_eval_stderr_$$.tmp"

if ! touch $stdout; then
    echo "$name: cannot access temp directory $tmpdir" >&2
    exit 1
fi

pass_count=0
total_count=0
for input in $data_dir/input*; do
    (( ++total_count ))
    suffix=${input#*input_}
    if (( verbose )); then echo "$name: running test $suffix" >&2; fi
    cat $input | name-value-eval --variables=$variables --test > $stdout 2> $stderr
    if ! cmp --quiet $stdout $data_dir/stdout_$suffix; then
        echo "$name: test failed for input_$suffix (stdout is different):" >&2
        diff $stdout $data_dir/stdout_$suffix >&2
    elif ! cmp --quiet $stderr $data_dir/stderr_$suffix; then
        echo "$name: test failed for input_$suffix (stderr is different):" >&2
        diff $stderr $data_dir/stderr_$suffix >&2
    else
        (( ++pass_count ))
        if (( verbose )); then echo "$name: test $suffix passed" >&2; fi
    fi
done

if [[ $fail_count == 0 ]]; then
    echo "$name: all $total_count tests passed" >&2
    bye 0
else
    echo "$name: $pass_count/$total_count test(s) passed" >&2
    bye 1
fi

