#!/bin/bash

name=$0

source $( which resources-util ) || exit 1

function must_work()
{
    local msg=$1
    echo "$name: $msg must work" >&2
    exit 1
}

function prepare_for_match()
{
    local path=$1
    path="${path//\//\\\/}"
    name-value-convert --from json --to path-value | sed "s/^/$path\//;/resources/s/\"//g"
}

output="output"
rm -rf "$output" || exit 1
mkdir -p "$output" || exit 1

# check total
total_system_resources | sed 's/^/total\//;s/"//g'

# check initialization
counter="$output/counter.json"
cat <<EOF | initialize_resources "$counter"
resources/cpus="8"
resources/memory/main="1000000"
resources/memory/shared="500000"
EOF

cat "$counter" | prepare_for_match "initial"

# check non-negative sanity
cat "data/negative.json" | non_negative_resources | prepare_for_match "non_negative"

# check small request; shall succeed; pids here and below are fake
acquire_resources "data/small_request.json" "$counter" "data/maximum.json" 123 || must_work "acquiring small resources"
cat "$counter" | prepare_for_match "one/small"
acquire_resources "data/small_request.json" "$counter" "data/maximum.json" 234 || must_work "acquiring small resources"
cat "$counter" | prepare_for_match "two/small"
