#!/bin/bash

readonly fullname=$(readlink -f $0)
readonly location=$(dirname $fullname)
readonly scriptname=$(basename $0)

source $( which comma-application-util )

# Make it bash stricter by turning on die on errors
set -uo pipefail
IFS=$'\n\t' 

declare -rA target_list=([airports]=1 [navaids]=1 [waypoints]=1 [routes]=1 [route_segments]=1 [route_segment_schedules]=1 [free_flight]=1)

# ~~~~~~~~~~~~~~~~~~
# user interface
# ~~~~~~~~~~~~~~~~~~
red="\033[0;31m"
green="\033[0;32m"
brown="\033[0;33m"
none="\033[m"

# Standard logging functions

function message() { echo "$scriptname: $*" >&2 ; }

function warn() { echo -e "${brown}$scriptname: Warning: $*${none}" >&2 ; }

function die() { echo -e "${red}$scriptname: $*${none}" >&2 ; exit 1 ; }

# for options processing 
function description()
{
    cat <<EOF
--help; display instructions on using this program
--verbose; display all filenames as processed
--single=[<directory>]; process a single directory 
--file=[<file>]; process a single file
--timestamp=[<time>]; process a single file or directory with the given \n timestamp
--many=[<directory>]; process a set of timestamped directories
--convention=[<filename>]; when processing directories the files are named \n using this pattern that can be passed to find utility. 
EOF
}

function bash_completion()
{
    description | sed 's/=.*//g' | sed 's/;.*//g' 
}

function usage()
{
    cat <<EOF >&2

Compiles all the progress statistics in timestamped subdirectories into a
single plotable data set.

Works from current directory down.

Usage:
    $scriptname --source=<directory> <type>

Options:
EOF
    description | sed 's/^/    /g' | sed 's/\\n/\n       /g' >&2
    cat <<EOF >&2

Examples:
    /home/me/ $> cd /home/me/20150101T0000
    /home/me/20150101T0000 $> comma-test-run
    /home/me/20150101T0000 $> cd ~/tmp 
    /home/me/tmp $>  $scriptname --many=/home/me/20150101T0000 --convention=progress.txt
        - output the aggregate files into the current working directory.
EOF
    exit
}

# ~~~~~~~~~~~~~~~~~~
# workers
# ~~~~~~~~~~~~~~~~~~

# ~~~~~~~~~~~~~~~~~~
# main 
# ~~~~~~~~~~~~~~~~~~

declare options_verbose=""
declare options_many=""
declare options_single=""
declare options_file=""
declare options_timestamp=""
declare options_convention=""

if (( $( comma_options_has --bash-completion $@ ) )) ; then bash_completion ; exit 0 ; fi
if (( $( comma_options_has --help $@ ) || $( comma_options_has -h $@ ) )) ; then usage ; fi
comma_path_value_to_var --prefix=options < <( description | comma-options-to-name-value $@ | grep '=' )

[[ -z $options_verbose ]] || options_verbose="--verbose"

if [[ "$options_many" ]] ; then
    [[ -d "$options_many" ]] || die "Error: Argument is not a directory '$options_many'"
    [[ "$options_convention" ]] || die "Error: No convention specified"
    
    [[ -z $options_verbose ]] || echo "CONVENTION $options_convention MANY $options_many" >&2

    find "$options_many" -maxdepth 1 -mindepth 1 -type d \
        -exec "$fullname" --single "{}" --convention "$options_convention" $options_verbose ";"

elif [[ "$options_single" ]] ; then
    [[ -d "$options_single" ]] || die "Error: Argument is not a directory '$options_single'"
    [[ "$options_convention" ]] || die "Error: No convention specified"
    [[ "$options_timestamp" ]] || options_timestamp=$( basename "$options_single" )
    
    [[ -z $options_verbose ]] || echo "TIME $options_timestamp CONVENTION $options_convention DIRECTORY $options_single" >&2

    find "$options_single" -name "$options_convention" -type f \
            -exec "$fullname" --file "{}" --timestamp "$options_timestamp" $options_verbose ";" \
        | sed "s#^$options_single##g"

elif [[ "$options_file" ]] ; then
    [[ -f "$options_file" ]] || die "Error: Argument is not a file '$options_file'"
    [[ "$options_timestamp" ]] || die "Error: No timestamp specified"
    
    [[ -z $options_verbose ]] || echo "TIME $options_timestamp FILE $options_file" >&2
    
    cat "$options_file" | comma-progress --elapsed | comma-progress --sum | sed 's#"##g' | sed 's#=#,#g' | csv-paste "value=$options_file" "value=$options_timestamp"  - 2>/dev/null
    
else
    warn "No Orders Given"
fi;
