#!/bin/bash

# This file is part of comma, a generic and flexible library
# Copyright (c) 2014 The University of Sydney
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University of Sydney nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name=$( basename $0 )

source $( which comma-application-util )

function description()
{
    cat <<EOF
--help,-h; show this help
--sleep=[<duration>]; optional duration (as recognised by sleep(1)) to sleep between executions of the command (default: no sleep)
EOF
}

function usage()
{
    cat >&2 <<EOF
usage: ${name} [OPTION]... -- COMMAND [ARG]...

repeatedly run command

options:
EOF
    description | sed 's/^/    /g' >&2
    cat >&2 <<EOF

examples:

    output ntp

        $name --sleep 1 -- ntpq -p

    run single connection tcp listener

        $name -- socat tcp-listen:12345,reuseaddr -

note: the end of options delimiter (--) is required before COMMAND

EOF
    exit 0
}

function bye
{
    pkill -P $$
    exit
}

function run
{
    local duration="$1"
    while true; do
        "${@:2}"
        [[ -n "$duration" ]] && sleep $duration
    done
}

end_of_options="--"
comma_repeat_options=()
for arg in "$@"; do
    shift
    [[ "$arg" == "$end_of_options" ]] && break
    comma_repeat_options+=( "$arg" )
done
command_args=( "$@" )

if (( $( comma_options_has --help "${comma_repeat_options[@]}" ) || $( comma_options_has -h "${comma_repeat_options[@]}" ) )); then usage; fi

comma_path_value_to_var --prefix=options < <( description | comma-options-to-name-value "${comma_repeat_options[@]}" )

trap bye INT TERM HUP
run "$options_sleep" "${command_args[@]}" &
wait
