add_executable( comma-progress comma-progress.cpp )
target_link_libraries(comma-progress ${comma_ALL_EXTERNAL_LIBRARIES} comma_csv comma_xpath comma_name_value )
INSTALL( TARGETS comma-progress RUNTIME DESTINATION ${comma_INSTALL_BIN_DIR} COMPONENT Runtime )

if( NOT WIN32 )
    execute_process(COMMAND bash -c "ps -o unit $BASHPID >/dev/null 2>&1 && echo -n 1 || echo -n 0" OUTPUT_VARIABLE PROCPS_HAS_SYSTEMD)
    MESSAGE( STATUS "PROCPS_HAS_SYSTEMD: " ${PROCPS_HAS_SYSTEMD} )
    add_executable( comma-timeout-group comma-timeout-group.cpp )
    if( PROCPS_HAS_SYSTEMD )
        MESSAGE( STATUS "Shall use SYSTEMD" )
        set_source_files_properties( comma-timeout-group.cpp PROPERTIES COMPILE_FLAGS -DHAVE_SYSTEMD )
    endif( PROCPS_HAS_SYSTEMD )
    target_link_libraries(comma-timeout-group ${comma_ALL_EXTERNAL_LIBRARIES} comma_csv comma_xpath comma_name_value procps )
    INSTALL( TARGETS comma-timeout-group RUNTIME DESTINATION ${comma_INSTALL_BIN_DIR} COMPONENT Runtime )
endif( NOT WIN32 )

add_executable(comma-nap comma-nap.cpp )
target_link_libraries(comma-nap ${comma_ALL_EXTERNAL_LIBRARIES} )
INSTALL( TARGETS comma-nap RUNTIME DESTINATION ${comma_INSTALL_BIN_DIR} COMPONENT Runtime )

INSTALL( PROGRAMS comma-profile-graph DESTINATION ${comma_INSTALL_BIN_DIR} )
INSTALL( PROGRAMS comma-repeat DESTINATION ${comma_INSTALL_BIN_DIR} )
INSTALL( PROGRAMS comma-stats DESTINATION ${comma_INSTALL_BIN_DIR} )
install( PROGRAMS comma-test-match DESTINATION ${comma_INSTALL_BIN_DIR} )
install( PROGRAMS comma-test-run DESTINATION ${comma_INSTALL_BIN_DIR} )
install( PROGRAMS comma-test-resources DESTINATION ${comma_INSTALL_BIN_DIR} )
install( PROGRAMS comma-top DESTINATION ${comma_INSTALL_BIN_DIR} )
