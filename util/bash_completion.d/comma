#!/bin/bash

_comma_opts()
{
    cat <<EOF
-b
-d
-f
-o
-v
--binary
--delimiter
--fields
--flush
--full-xpath
--help
--output-fields
--precision
--quote
--verbose
EOF
#--output
}

_comma_test_run_opts() 
{
    cat <<EOF
--begin
--black-list
--debug
--dry-run
--end
--from
--help
--max-memory-main
--max-memory-shared
--max-parallel
--max-run-time
--max-wait-time
--no-ansiterm-control-characters
--no-control-characters
--optional
--output-directories
--parallel
--path
--quiet
--raw
--run-disabled
--run-optional
--test-option
--to
--until-first-failure
--verbose
--white-list
EOF
}

_csv_time_opts()
{
    cat <<EOF
-d
-i
-s
--delimiter
--fields
--from
--iso
--sec
--to
--to-iso-string
--to-seconds
aixm
iso
seconds
sql
EOF
}

_csv_shuffle_opts()
{
_comma_opts
    cat <<EOF
append
remove
swap
EOF
}

_csv_units_opts()
{
    cat <<EOF
--from
--to
--scale
celsius
degrees
fahrenheit
feet
kelvin
kilograms
knots
meters
meters-per-second
miles
nautical-miles
pounds
radians
statute-miles
hours
minutes
seconds
percent
fraction
EOF
}

_csv_update_opts()
{
    cat <<EOF
--empty
--erase
--format
--help
--last
--last-only
--matched-only
--remove
--reset
--unset
--update-non-empty-fields
--verbose
ascii
binary
EOF
}

_simple()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts=$( $1 )
 
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
}

_comma_test_run() { _simple _comma_test_run_opts ; }
_csv_shuffle() { _simple _csv_shuffle_opts ; }
_csv_time() { _simple _csv_time_opts ; }
_csv_units() { _simple _csv_units_opts ; }
_csv_update() { _simple _csv_update_opts ; }

complete -F _comma_test_run comma-test-run
complete -F _csv_shuffle csv-shuffle
complete -F _csv_time csv-time
complete -F _csv_units csv-units
complete -F _csv_update csv-update

# todo
#     - add license
#     - add --bash-completion to csv-units, csv-update, comma-test-_comma_test_run
#     - git mv util/bash_completion.d etc/bash_completion.d
#     - move installation logic to util/bash_completion.d/CMakeLists.txt?
#     - install in the installation directory, if possible (if not, /etc is OK)
#     - use something like code below
# _comma_autocomplete()
# {
#     local cur prev opts
#     COMPREPLY=()
#     cur="${COMP_WORDS[COMP_CWORD]}"
#     prev="${COMP_WORDS[COMP_CWORD-1]}"
#     opts=$( $( ${COMP_WORDS[0]} --bash-completion ) )
#     COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
#     complete -F 
# }
# 
# complete -F _comma_autocomplete csv-units
# complete -F _comma_autocomplete csv-update
