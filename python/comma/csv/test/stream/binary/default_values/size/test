#!/bin/bash

source $( which comma-application-util )
function output { csv-paste value="line[" line-number value="]\=" --delimiter '@' - | sed 's/@//g'; }

function default_values
{
    python -c "$( cat <<END
import comma

comma.csv.time.zone( 'UTC' )
size=$( cat size )
input_format="$input_format"

point_t = comma.csv.struct( 'id,signal,x,y,z', 'uint64', '(2,)float64', 'float64', 'float64', 'int64' )
observer_t = comma.csv.struct( 't,id', 'datetime64[us]', 'uint8' )
record_t = comma.csv.struct( 'name,point,observer', 'S3', point_t, observer_t )
default_values = { 'point/signal': (-111, -222), 'point/y': 123, 'observer/t': '19991212T123456' }
format=','.join(comma.csv.format.to_numpy( input_format ))
stream = comma.csv.stream( record_t, fields=',observer/id,point/x,point/z,,', format=format, default_values=default_values, verbose=True)
for i in stream.iter( size=size ):
    stream.write(i)
END
)"
}

input_format='s[1],ub,d,l,2s[3]'
csv-to-bin $input_format | default_values | csv-from-bin 's[3],ul,4d,l,t,ub' | output
comma_status_ok
echo "status=$?"
