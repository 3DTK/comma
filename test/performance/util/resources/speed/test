#!/bin/bash

name=$( basename $0 )

source $( which comma-application-util ) || exit 1
source $( which comma-resources-util ) || exit 1
source $( which comma-process-util ) || exit 1

function handler()
{
    echo "count=$iter"
    exit 0
}
export -f handler

function count()
{
    iter=0
    trap 'handler' SIGTERM
    while true ; do
        comma_acquire_resources "$output/tiny.json" "$output/counter.json" "$output/limits.json" 123 || return 1
        (( ++iter ))
    done
}
export -f count

output="output"
export output

# initialize
counter="$output/counter.json"
limits="$output/limits.json"
tiny="$output/tiny.json"
cat <<EOF | name-value-convert --from path-value --to json > "$limits"
resources/cpus="8"
resources/memory/main="1000000"
resources/memory/shared="500000"
EOF
cat <<EOF | name-value-convert --from path-value --to json > "$tiny"
resources/cpus="0"
resources/memory/main="1"
resources/memory/shared="1"
EOF
cat "$limits" | name-value-convert --from json --to path-value | comma_initialize_resources "$counter"

export output
comma_execute_and_wait --group --max-wait=10 "bash -c count"
rv=$?

(( rv == 124 )) && exit 0  # normally killed by timeout
exit 1
